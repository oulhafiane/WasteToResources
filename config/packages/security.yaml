security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        user:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        register_picker:
            pattern:    ^/api/picker$
            methods:	[POST]
            stateless:  true
            anonymous: true
        register_reseller:
            pattern:    ^/api/reseller$
            methods:	[POST]
            stateless:  true
            anonymous: true
        register_buyer:
            pattern:    ^/api/buyer$
            methods:	[POST]
            stateless:  true
            anonymous: true
        login:
            pattern:    ^/api/auth$
            stateless:  true
            anonymous: true
            provider: user
            json_login:
                check_path:         /api/auth
                success_handler:    lexik_jwt_authentication.handler.authentication_success
                failure_handler:    lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:    ^/api
            stateless:  true
            provider: user
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            anonymous: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
         - { path: ^/api/picker$, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [POST] }
         - { path: ^/api/reseller$, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [POST] }
         - { path: ^/api/buyer$, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [POST] }
         - { path: ^/api/auth$, roles: IS_AUTHENTICATED_ANONYMOUSLY, methods: [POST] }
         - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
